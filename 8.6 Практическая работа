
"""Задача 1. Космическая еда
Что нужно сделать
Ваш космический корабль потерпел крушение на пустынной планете. Еда здесь не растёт, но вы спасли из обломков
100-килограммовый мешок гречки. Из прошлого опыта вы знаете, что если будете экономно питаться, то у вас будет
уходить по четыре килограмма гречки в месяц.

Чтобы прикинуть гречневый бюджет, вы решили написать программу, которая выведет информацию о том,
сколько килограммов гречки у вас должно быть в запасе через месяц, два и так далее, пока она не закончится.
Используйте цикл for."""
from turtledemo.penrose import start

# STOCK_WEIGHT = 100
# year = 2077
# while  STOCK_WEIGHT > 0:
#     for month in range(1, 13):
#         STOCK_WEIGHT -= 10
#         if month == 12:
#             year += 1
#         if STOCK_WEIGHT < 0:
#             break
#         print(f'В {month} месяце  {year} года в запасе останется {STOCK_WEIGHT}')
#######################################################################################################################

"""Задача 2. Долги
Что нужно сделать
«МирПрогБанк» наконец-то разделил законопослушных граждан и должников и поместил их в разные базы. Но банк не торопится
 сильно давить на неплательщиков. Операторам банка дали задание позвонить каждому пятому должнику из списка 
 (нумерация начинается с нуля) и уточнить, какую сумму каждый из них задолжал банку.

Напишите программу, которая получает данные о количестве должников, а затем спрашивает у каждого пятого (начиная с нуля)
 его долг. В конце выводится общая сумма долгов.
 Пример 1

Введите количество должников: 13
Должник с номером 0
Сколько должны? 1000
Должник с номером 5
Сколько должны? 5000
Должник с номером 10
Сколько должны? 2000
Общая сумма долга: 8000"""

# debtor_counter = int(input('Введите количество должников: '))
# total_debt = 0
# for debtor in range(debtor_counter):
#     print(f'Должник с номером {debtor}')
#     amount_of_debt = input('Сколько должны? ')
#     total_debt += int(amount_of_debt)
# print(f'Общая сумма долга: {total_debt}')
#######################################################################################################################

"""Задача 3. Микроволновка
Что нужно сделать
Мы разрабатываем микропрограмму — таймер обратного отсчета для микроволновых печей. Некоторым пользователям не нравится 
пищащий звук.

Есть задача убрать звук по готовности и заменить его сообщением на LED-экране. В нашем случае будем выводить в консоль 
сообщение с обратным отсчетом в секундах от “reverse_timer” до момента готовности, то есть «0» секунд, и спрашивать
 пользователя, готов ли он забрать еду.

Пользователь в любой момент может прервать режим разогрева, введя «1» (то есть ответить «Да, еда готова»),
 тогда программа выводит на экран сообщение «Ваша еда готова, можете забрать» и показывает, на какой секунде был прерван
  таймер.
Если пользователь отвечает «0», что равноценно «Нет», то таймер уменьшается. Когда он достигнет «0» секунд,
 выводим сообщение «Ваша еда готова, осторожно горячo!»

В данном задании используем цикл for.
“reverse_timer” – переменная счетчик, значение которой запрашиваем у пользователя через функцию ввода input.

Задайте время до обнуления таймера.
Используйте цикл for.
На каждой итерации задавайте персонажу вопрос, хочет ли он сейчас остановить разогрев или нет.
"""
# reverse_timer = int(input('Задайте время до обнуления таймера: '))
# food_is_ready = False
#
# for minute in range(reverse_timer, -1, -1):
#     food_is_ready = int(input('Еда готова? 1 - Да, 0 - Нет: '))
#     if food_is_ready:
#         print(f'Ваша еда готова за {reverse_timer - minute} минут, можете забрать')
#         break
#     elif not minute:
#         print('Ваша еда готова, осторожно горячo!')
########################################################################################################################

"""Задача 4. Среднее на отрезке
Что нужно сделать
Напишите программу, которая считывает с клавиатуры три числа a, b и c, считает и выводит
 на консоль среднее арифметическое всех чисел из отрезка [a; b], кратных числу c.

Рекомендации
Функция range(start, stop) не включает границу stop, останавливается, не доходя до неё.
"""

# a = int(input('Введите начало отрезка: '))
# b = int(input('Введите конец отрезка: '))
# c = int(input('Введите кратное: '))
# lst_sum = []
#
# for i in range(a, b+1):
#     if i % c == 0:
#         lst_sum.append(i)
# print(f"Среднее арифметическое равно {int(sum(lst_sum)/len(lst_sum))}")
########################################################################################################################
"""Задача 5. Функция
Что нужно сделать
Перед изучением функций из программирования Саша решил оживить свои знания о функциях математики.
 Помогите Саше написать программу, которая будет считать значение функции в каждой точке отрезка с нужным шагом,
начиная с конца).
Напишите программу, которая получает на вход начало и конец отрезка, а также шаг (отрицательный),
 а затем высчитывает функцию y в каждой точке отрезка и выводит ответ на экран с нужным шагом, начиная с конца.

Сама функция выглядит так:
y = x**3 + 2*x**2 - 4*x + 1

Пример:
Введите начало отрезка: −2
Введите конец отрезка: 2
Введите шаг: −1
В точке 2 функция равна 9
В точке 1 функция равна 0
В точке 0 функция равна 1
В точке −1 функция равна 6
В точке −2 функция равна 9"""

# start_with, finish, step = map(int, (input('Введите начало отрезка: '),
#                                      input('Введите конец отрезка: '), input('Введите шаг : ')))
# add_iter = 1
# if step < 0:
#     start_with, finish = finish, start_with
#     add_iter = -1
# for x in range(start_with, finish + add_iter, step):
#     y = x ** 3 + 2 * x ** 2 - 4 * x + 1
#     print(f'В точке {x} функция равна {y}')
#######################################################################################################################
"""Задача 6. Стипендия
Что нужно сделать
Ежемесячная стипендия студента составляет educational_grant рублей, а расходы на проживание превышают стипендию и
 составляют expenses рублей в месяц. 
Рост цен ежемесячно увеличивает расходы на 3%, кроме первого месяца. Обратите внимание, что каждый месяц цены
 увеличиваются на 3% относительного прошлого месяца. 
Составьте программу расчёта суммы денег, которую необходимо получить у родителей один раз в начале обучения,
 чтобы можно было прожить учебный год (десять месяцев), используя только эти деньги и стипендию.

Пример
Введите стипендию: 10000
Введите расходы на проживание: 12000
месяц траты 12000 не хватает 2000
месяц траты 12360.0 не хватает 4360.0
месяц траты 12730.8 не хватает 7090.8
месяц траты 13112.7 не хватает 10203.52
месяц траты 13506.1 не хватает 13709.63
месяц траты 13911.2 не хватает 17620.92
месяц траты 14328.6 не хватает 21949.55
месяц траты 14758.4 не хватает 26708.03
месяц траты 15201.2 не хватает 31909.27
месяц траты 15657.2 не хватает 37566.55
Нужно попросить у родителей 37566.55 рублей"""

# HOW_LONG = 10 #mounth
# educational_grant = int(input('Введите стипендию: '))
# expenses = int(input('Введите расходы на проживание: '))
# credit = abs(educational_grant - expenses)
# for month in range(1, HOW_LONG + 1):
#     print(f'{month}. месяц траты {round(expenses, 1)} не хватает {round(credit, 2)}')
#     if month == HOW_LONG:
#         break
#     expenses += expenses * 0.03
#     credit += abs(educational_grant - expenses)
# print(f'Нужно попросить у родителей {round(credit, 2)} рублей"""')
#######################################################################################################################
"""Задача 7. Сумма ряда
Что нужно сделать
Дано натуральное число N. Напишите программу для вычисления суммы N элементов последовательности по формуле,
 (-1)**n * 1/(2**n) где n — это порядковый номер элемента (расчёт начинается с нуля)."""

# N = int(input('Введите длину элементов: '))
# result = 0
#
# for n in range(N):
#     current_expression = (-1) ** n * 1 / (2 ** n)
#     result += current_expression
#
# print(f'При N = {N}  сумма  выражений будет равна: {result}')
########################################################################################################################
"""Задача 8. Кинотеатр
Что нужно сделать
X мальчиков и Y девочек пошли в кинотеатр и купили билеты на идущие подряд места в одном ряду. Напишите программу,
которая выдаст, как нужно сесть мальчикам и девочкам, чтобы рядом с каждым мальчиком сидела хотя бы одна девочка,
а рядом с каждой девочкой — хотя бы один мальчик.
На вход подаются два числа: количество мальчиков X и количество девочек Y. В ответе выведите какую-нибудь строку,
в которой будет ровно X символов B, обозначающих мальчиков, и Y символов G, обозначающих девочек, 
удовлетворяющую условию задачи. Пробелы между символами выводить не нужно.
Если рассадить мальчиков и девочек согласно условию задачи невозможно, выведите строку «Нет решения».

Пример 1
Введите количество мальчиков: 5
Введите количество девочек: 5
Ответ: BGBGBGBGBG
Пример 2
Введите количество мальчиков: 5
Введите количество девочек: 3
Ответ: BGBGBBGB
Пример 3
Введите количество мальчиков: 100
Введите количество девочек: 1
Ответ: Нет решения"""

# boy = int(input('Введите количество мальчиков: '))
# girl = int(input('Введите количество девочек: '))
# places = ''
# 
# if boy + girl == 4 or abs(boy - girl) > 2:
#     print('Ответ: Нет решения')
# elif abs(boy - girl) == 2:
#         count = girl if girl < boy else boy
#         while count != 1:
#             places += 'bg'
#             count -= 1
#         places += 'bbgb'
#         if girl < boy:
#             places = places.replace('b', 'B').replace('g', 'G')
#         else:
#            places = places.replace('b', 'G').replace('g', 'B')
# elif abs(boy - girl) == 1:
#         places = "G".join("B"* boy) if boy > girl else "B".join("G"* girl)
# else:
#     places = 'BG'* boy
# print(places)
########################################################################################################################
