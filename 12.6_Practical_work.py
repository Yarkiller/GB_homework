"""Задача 1. Сумма чисел
Что нужно сделать:
Напишите функцию summa_n, которая принимает одно целое положительное число N и выводит сумму всех чисел
 от 1 до N включительно."""
# def summa_n(num):
# #     return sum([x for x in range(1, num+1)])
# #
# # some_num = int(input('Введите число: '))
# # print(f'Я знаю, что сумма чисел от 1 до {some_num} равна {summa_n(some_num)}')
######################################################################################################################
"""Задача 2. Функция в функции
Что нужно сделать
Евгений проходит специальный тест по программированию. Всё шло хорошо, пока герой не наткнулся на тему «Функции».
 Задание звучит так:
Основная ветка программы, не считая заголовков функций, состоит из одной строки кода. Это вызов функции test().
 В ней запрашивается на ввод целое число. Если оно положительное, то вызывается функция positive(),
  тело которой содержит команду вывода на экран слова «Положительное». Если число отрицательное,
   то вызывается функция negative(), её тело содержит выражение вывода на экран слова «Отрицательное»."""
# def positive():
#     print('Положительное')
#
# def negative():
#     print('Отрицательное')
#
# def test():
#     num = int(input('Введите целое число '))
#     if num >= 0:
#         return positive()
#     else:
#         return negative()
#
# test()
#######################################################################################################################
"""Задача 3. Апгрейд калькулятора
Что нужно сделать
Степан использует калькулятор для расчёта суммы и разности чисел, но на работе ему требуются не только обычные
 арифметические действия. Он ничего не хочет делать вручную, поэтому решил немного расширить функционал калькулятора.

Напишите программу, запрашивающую у пользователя число и действие, которое нужно сделать с числом:
 вывести сумму его цифр, максимальную или минимальную цифру.
  Каждое действие оформите в виде отдельной функции, а основную программу зациклите.

Запрошенные числа должны передаваться в функции суммы, максимума и минимума при помощи аргументов."""
# def spliter(num):
#     num = map(int, list(num.replace('-', '')))
#     return num
#
# def add_num(number):
#     number = sum(spliter(number))
#     return number
#
# def is_min(number):
#     return min(spliter(number))
#
# def is_max(number):
#     return max(spliter(number))
# flag = None
# while flag != 'Q':
#     some_number, flag = input('Введите число, а затем действие (+. max, min, Q - выход) \n'), input()
#     if some_number and flag == '+':
#         print(add_num(some_number))
#     elif some_number and flag == 'max':
#         print(is_max(some_number))
#     elif some_number and flag == 'min':
#         print(is_min(some_number))
#     elif flag == 'Q':
#         break
#     else:
#         print('Неверный ввод, попробуйте ещё разок')
########################################################################################################################
"""Задача 4. Число наоборот
Что нужно сделать
Вводится последовательность чисел, оканчивающаяся нулём. Реализуйте функцию, которая принимает в качестве
 аргумента каждое число, переворачивает его и выводит на экран."""

# while True:
#     num = input('Введите число: ')[::-1]
#     if num == '0' or not num.isdigit():
#         break
#     print('Число наоборот:', num)
#     while num[0] == '0':
#         num = num[1:]
#     print('Число наоборот (дополнительно):', num)
# print('Программа завершена!')
########################################################################################################################
"""Задача 5. Текстовый редактор
Что нужно сделать
Продолжаем разрабатывать новый текстовый редактор. В этот раз нам поручили написать для него код, который считает,
 сколько раз в тексте встречается любая выбранная буква или цифра (а не только буквы Ы, как раньше). 

Напишите функцию count_letters(), которая принимает на вход текст и подсчитывает,
 какое в нём количество цифр K и букв N. Функция должна вывести на экран информацию
  о найденных буквах и цифрах в определённом формате."""
# def count_letters(text: str, letter) -> int:
#     #counter = text.lower().count(letter.lower())    #for cheking
#     counter = 0
#     for other_letter in text.lower():
#         if other_letter == letter.lower():
#             counter += 1
#     return counter
# looking_for = input('Введите текст: ')
# number = input('Какую цифру ищем? ')
# symbol = input('Какую букву ищем? ')
# print(f'Количество цифр {number}:',  count_letters(looking_for, number))
# print(f'Количество букв {symbol}:',  count_letters(looking_for, symbol))
########################################################################################################################
"""Задача 6. НОД
Что нужно сделать
Напишите функцию, вычисляющую наибольший общий делитель двух чисел."""
# def max_div(x, y):
#     x = min(x, y)
#     y = max(y, x)
#     for i in range(x, 0, -1):
#         print(i)
#         if y % i == 0 and x % i == 0:
#             return i
#     return 'нет общих делителей'
# print(max_div(100, 80))
# def max_div(x, y):
#     less = min(x, y)
#     for i in range(less, 0, -1):
#         if y % i == 0 and x % i == 0:
#             return i
#     return 'нет общих делителей'
#
# print('НОД:', max_div(int(input('Введите 1 число ')), int(input('Введите 2 число '))))
#######################################################################################################################
"""адача 7. Недоделка
Что нужно сделать
Вы пришли на работу в компанию по разработке игр, целевая аудитория — дети и их родители.
 У предыдущего программиста было задание сделать две игры в одном приложении,
  чтобы пользователь мог выбирать одну из них. Однако программист, на место которого вы пришли,
   перед увольнением не успел выполнить эту задачу и оставил только небольшой шаблон проекта.
    Используя этот шаблон, реализуйте игры «Камень, ножницы, бумага» и «Угадай число»."""
# from random import randint, choice
# 
# def rock_paper_scissors():
#     winner = {'камень': 'ножницы', 'ножницы': 'бумага', 'бумага': 'камень'}
#     while True:
#         question = input('Выберите и введите слово: камень, ножницы или бумага ?(Q - выход): ')
#         answer = choice(['камень', 'ножницы', 'бумага'])
#         if  not question  or question == 'Q' :
#             break
#         print(f'Вы выбрали {question}, а я выбрал {answer}.', end=' ')
#         if answer == question:
#             print('=Ничья= ')
#         elif not winner.get(question, False):
#             print('Вы ошиблись, попробуйте ещё!')
#         elif winner[question] == answer:
#             print('=Вы победили, ура!= ')
#         else:
#             print('=Вы проиграли.=')
#   # Здесь будет игра «Камень, ножницы, бумага»
# def guess_the_number():
#     print('Я загадал число от 1 до 10!')
#     x_number = randint(1, 10)
#     print(x_number)
#     guess = None
#     while x_number != guess:
#         guess = int(input('Ваше предположение? - '))
#         if guess > x_number:
#             print("Я загадал число меньше")
#         elif guess < x_number:
#             print('Я загадал число больше')
#         else:
#             print('Угадал!')
# 
#   # Здесь будет игра «Угадай число»
# 
# def main_menu():
#     choise_game = input('Во что хотите играйт?  Введите: 1 - Угадай число, 2 - «Камень, ножницы, бумага» : ')
#     if choise_game == '2':
#         rock_paper_scissors()
#     if choise_game == '1':
#         guess_the_number()
#   # Здесь главное меню игры
# 
# main_menu()
