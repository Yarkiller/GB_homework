"""Задание 1. Тестовое задание
Степан устраивается на работу и должен выполнить тестовое задание: проанализировать таблицу,
 понять, как она строится, и написать программу для её вывода на экран.
Что нужно сделать:
Помогите Степану реализовать программу.

Подсказка: обращайте внимание на номера столбцов и помните о литерале \t для табуляции."""


# step = 0
# for i in range(6):
#     for j in range(step, 11 + step, 2):
#         print(j, end='\t')
#     step += 1
#     print()
########################################################################################################################
"""Задание 2. Лестница
Что нужно сделать
Напишите программу, которая выводит «лестницу» из чисел, когда пользователь вводит число N:"""

# num = int(input('Введите число: '))
# j = 1
# for i in range(1, int(num)+1):
#         print(i * str(j))
#         j += 1
# # Простое лучше сложного, не так ли... ;-)
########################################################################################################################
"""Задание 3. Рамка
Что нужно сделать
Напишите программу, которая рисует прямоугольную рамку с помощью символьной графики.
 Для вертикальных линий используйте символ вертикального штриха (|), а для горизонтальных — дефис (-).
  Пусть ширину и высоту рамки определяет пользователь."""

# height = int(input('Введите высоту: '))
# weight = int(input('Введите ширину: '))
# for i in range(height):
#     for j in range(weight + 1):
#         if j == 0 or j == weight:
#             print('|', end='')
#         else:
#             print('-' if i == 0 or i == height - 1 else ' ', end='')
#     print()
#######################################################################################################################
"""Задание 4. Простые числа
Что нужно сделать
Напишите программу, которая считает количество простых чисел в заданной последовательности и выводит ответ на экран.

Простое число делится только на себя и на единицу.
 Последовательность задаётся при помощи вызова ввода (input) на каждой итерации цикла. Одна итерация — одно число."""

# lst = list(input("Введите последовательность через пробел: ").split())
# counter = lst.count('2') * 1 if '2' in lst else 0
# for num in lst:
#     if num == '9':
#         continue
#     if num[-1] in ['1', '3', '7', '9']:
#         counter += 1
# print(f'Нашёл {counter} простых чисел')
########################################################################################################################
"""Задание 6. Пирамидка
Что нужно сделать
Напишите программу, которая выводит на экран равнобедренный треугольник (пирамидку), заполненный символами хештега (#).
 Пусть высоту пирамиды определяет пользователь."""

# counter = int(input('Введите высоту: '))
# for i in range(counter + 1 ):
#     space = counter - i
#     print(' ' * space, '#' * (counter - space + i - 1))
########################################################################################################################
"""Задание 7. Пирамидка-2
Что нужно сделать
Напишите программу, которая получает на вход количество уровней пирамиды и выводит их на экран,
 заполняя нечётными числами:"""
# counter = int(input('Введите высоту: '))
# start = 1
# for i in range(counter +2):
#     print('\t' * (counter - i +1), end='')
#     for j in range(i):
#         print(start, end='\t' * 2)
#         start += 2
#     print()
########################################################################################################################
"""Задание 8. Яма
Что нужно сделать
Представьте, что вы разрабатываете компьютерную игру с текстовой графикой. Вам поручили создать генератор ландшафта.
 Напишите программу, которая получает на вход число N и выводит на экран числа в виде ямы:"""

# deep = int(input('Введите глубину ямы: '))
# for i in range(deep):
#     for j in range(deep):
#         if deep - j >= deep - i:
#             print(deep - j, end='')
#         else:
#             print('.', end='')
#         if j == deep - 1:
#             for k in range(deep - 1, -1, -1):
#                 if deep - k >= deep - i:
#                     print(deep - k, end='')
#                 else:
#                     print('.', end='')
#     print()
